# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AcceptInventoryRequestByLogistDto {
  id: ID!
  tech_items: [UpdateTechInventoryItemDto!]
}

input AcceptInventoryRequestByTechDto {
  id: ID!
  request_invoices: [InventoryRequestInvoiceDto!]!
}

input AcceptInviteDto {
  key: String!
  name: String!
  password: String!
}

enum Account {
  arizona
  main
}

type AdAdUserLocationMetricsDto {
  campaign_name: String
  campaign_primary_status: String
  campaign_status: String
  location_view_resource_name: String
  metrics_all_conversions: Float
  metrics_all_conversions_from_interactions_rate: Float
  metrics_all_conversions_value: Float
  metrics_average_cost: Float
  metrics_average_cpc: Float
  metrics_average_cpe: Float
  metrics_average_cpm: Float
  metrics_average_cpv: Float
  metrics_clicks: Float
  metrics_conversions: Float
  metrics_conversions_from_interactions_rate: Float
  metrics_conversions_value: Float
  metrics_cost_micros: Float
  metrics_cost_per_all_conversions: Float
  metrics_cost_per_conversion: Float
  metrics_cross_device_conversions: Float
  metrics_ctr: Float
  metrics_engagement_rate: Float
  metrics_engagements: Float
  metrics_impressions: Float
  metrics_interaction_event_types: [String!]
  metrics_interaction_rate: Float
  metrics_interactions: Float
  metrics_value_per_all_conversions: Float
  metrics_value_per_conversion: Float
  metrics_video_view_rate: Float
  metrics_video_views: Float
  metrics_view_through_conversions: Float
}

type AdCampaignDto {
  accessible_bidding_strategy: String
  ad_serving_optimization_status: String
  advertising_channel_sub_type: String
  advertising_channel_type: String
  app_campaign_setting_app_id: String
  app_campaign_setting_app_store: String
  app_campaign_setting_bidding_strategy_goal_type: String
  asset_automation_settings: String
  audience_setting_use_audience_grouped: Boolean
  base_campaign: String
  bidding_strategy: String
  bidding_strategy_system_status: String
  bidding_strategy_type: String
  campaign_budget: String
  campaign_group: String
  campaign_id: Float
  commission_commission_rate_micros: Float
  demand_gen_campaign_settings_upgraded_targeting: Boolean
  dynamic_search_ads_setting_domain_name: String
  dynamic_search_ads_setting_feeds: [String!]
  dynamic_search_ads_setting_language_code: String
  dynamic_search_ads_setting_use_supplied_urls_only: Boolean
  end_date: String
  excluded_parent_asset_field_types: [String!]
  excluded_parent_asset_set_types: [String!]
  experiment_type: String
  final_url_suffix: String
  fixed_cpm_goal: String
  fixed_cpm_target_frequency_info_target_count: Float
  fixed_cpm_target_frequency_info_time_unit: String
  frequency_caps: String
  geo_target_type_setting_negative_geo_target_type: String
  geo_target_type_setting_positive_geo_target_type: String
  hotel_property_asset_set: String
  hotel_setting_hotel_center_id: Float
  keyword_match_type: String
  labels: [String!]
  listing_type: String
  local_campaign_setting_location_source_type: String
  local_services_campaign_settings_category_bids: String
  manual_cpa: String
  manual_cpc_enhanced_cpc_enabled: Boolean
  manual_cpm: String
  manual_cpv: String
  maximize_conversion_value_target_roas: Float
  maximize_conversions_target_cpa_micros: Float
  metrics_all_conversions: Float
  metrics_all_conversions_value: Float
  metrics_conversions: Float
  metrics_value_per_conversion: Float
  name: String
  network_settings_target_content_network: Boolean
  network_settings_target_google_search: Boolean
  network_settings_target_google_tv_network: Boolean
  network_settings_target_partner_search_network: Boolean
  network_settings_target_search_network: Boolean
  network_settings_target_youtube: Boolean
  optimization_goal_setting_optimization_goal_types: [String!]
  optimization_score: Float
  payment_mode: String
  percent_cpc_cpc_bid_ceiling_micros: Float
  percent_cpc_enhanced_cpc_enabled: Boolean
  performance_max_upgrade_performance_max_campaign: String
  performance_max_upgrade_pre_upgrade_campaign: String
  performance_max_upgrade_status: String
  primary_status: String
  primary_status_reasons: [String!]
  real_time_bidding_setting_opt_in: Boolean
  resource_name: String
  segments_ad_network_type: String
  segments_conversion_action: String
  segments_conversion_action_category: String
  segments_conversion_action_name: String
  segments_conversion_adjustment: Boolean
  segments_conversion_attribution_event_type: String
  segments_conversion_lag_bucket: String
  segments_conversion_or_adjustment_lag_bucket: String
  segments_day_of_week: String
  segments_external_conversion_source: String
  segments_new_versus_returning_customers: String
  selective_optimization_conversion_actions: [String!]
  serving_status: String
  shopping_setting_advertising_partner_ids: [Float!]
  shopping_setting_campaign_priority: Float
  shopping_setting_disable_product_feed: Boolean
  shopping_setting_enable_local: Boolean
  shopping_setting_feed_label: String
  shopping_setting_merchant_id: Float
  shopping_setting_use_vehicle_inventory: Boolean
  start_date: String
  status: String
  target_cpa_cpc_bid_ceiling_micros: Float
  target_cpa_cpc_bid_floor_micros: Float
  target_cpa_target_cpa_micros: Float
  target_cpm_target_frequency_goal_target_count: Float
  target_cpm_target_frequency_goal_time_unit: String
  target_cpv: String
  target_impression_share_cpc_bid_ceiling_micros: Float
  target_impression_share_location: String
  target_impression_share_location_fraction_micros: Float
  target_roas_cpc_bid_ceiling_micros: Float
  target_roas_cpc_bid_floor_micros: Float
  target_roas_target_roas: Float
  target_spend_cpc_bid_ceiling_micros: Float
  target_spend_target_spend_micros: Float
  targeting_setting_target_restrictions: String
  tracking_setting_tracking_url: String
  tracking_url_template: String
  travel_campaign_settings_travel_account_id: Float
  url_custom_parameters: String
  url_expansion_opt_out: Boolean
  vanity_pharma_vanity_pharma_display_url_mode: String
  vanity_pharma_vanity_pharma_text: String
  video_brand_safety_suitability: String
  video_campaign_settings_video_ad_inventory_control_allow_shorts: Boolean
}

type AdGroupDto {
  ad_group_id: Float!
  ad_rotation_mode: String
  audience_setting_use_audience_grouped: Boolean
  base_ad_group: String
  campaign: String
  cpc_bid_micros: Float
  cpm_bid_micros: Float
  cpv_bid_micros: Float
  display_custom_bid_dimension: String
  effective_cpc_bid_micros: Float
  effective_target_cpa_micros: Float
  effective_target_cpa_source: String
  effective_target_roas: Float
  effective_target_roas_source: String
  excluded_parent_asset_field_types: [String!]
  excluded_parent_asset_set_types: [String!]
  final_url_suffix: String
  fixed_cpm_micros: Float
  labels: [String!]
  metrics_active_view_ctr: Float
  metrics_all_conversions: Float
  metrics_average_cart_size: Float
  metrics_average_cost: Float
  metrics_average_cpc: Float
  metrics_average_cpe: Float
  metrics_average_cpm: Float
  metrics_average_cpv: Float
  metrics_average_order_value_micros: Int
  metrics_clicks: Int
  metrics_conversions: Float
  metrics_conversions_from_interactions_rate: Float
  metrics_conversions_from_interactions_value_per_interaction: Float
  metrics_conversions_value: Float
  metrics_cost_micros: Float
  metrics_cost_of_goods_sold_micros: Int
  metrics_cost_per_conversion: Float
  metrics_cross_sell_cost_of_goods_sold_micros: Int
  metrics_cross_sell_gross_profit_micros: Int
  metrics_cross_sell_revenue_micros: Int
  metrics_cross_sell_units_sold: Int
  metrics_ctr: Float
  metrics_engagement_rate: Float
  metrics_engagements: Int
  metrics_gmail_forwards: Int
  metrics_gmail_saves: Int
  metrics_gmail_secondary_clicks: Int
  metrics_gross_profit_margin: Float
  metrics_gross_profit_micros: Int
  metrics_impressions: Int
  metrics_interaction_event_types: [String!]
  metrics_interaction_rate: Float
  metrics_interactions: Int
  metrics_lead_cost_of_goods_sold_micros: Float
  metrics_lead_gross_profit_micros: Float
  metrics_lead_revenue_micros: Float
  metrics_lead_units_sold: Float
  metrics_new_customer_lifetime_value: Float
  metrics_orders: Float
  metrics_revenue_micros: Float
  metrics_units_sold: Float
  metrics_value_per_all_conversions: Float
  metrics_value_per_conversion: Float
  metrics_view_through_conversions: Float
  name: String
  optimized_targeting_enabled: Boolean
  percent_cpc_bid_micros: Float
  primary_status: String
  primary_status_reasons: [String!]
  resource_name: String
  segments_slot: String
  status: String
  target_cpa_micros: Float
  target_cpm_micros: Float
  target_cpv_micros: Float
  target_roas: Float
  targeting_setting_target_restrictions: [String!]
  tracking_url_template: String
  type: String
  url_custom_parameters: [String!]
}

type AdPageDto {
  ad_id: Float
  added_by_google_ads: Boolean
  app_ad_descriptions: [String!]
  app_ad_headlines: [String!]
  app_ad_html5_media_bundles: [String!]
  app_ad_html5_media_bundles_asset: [String!]
  app_ad_images: [String!]
  app_ad_images_asset: [String!]
  app_ad_mandatory_ad_text: String
  app_ad_youtube_videos: [String!]
  app_ad_youtube_videos_asset: [String!]
  app_engagement_ad_descriptions: [String!]
  app_engagement_ad_headlines: [String!]
  app_engagement_ad_images: [String!]
  app_engagement_ad_images_asset: [String!]
  app_engagement_ad_videos: [String!]
  app_engagement_ad_videos_asset: [String!]
  app_pre_registration_ad_descriptions: [String!]
  app_pre_registration_ad_headlines: [String!]
  app_pre_registration_ad_images: [String!]
  app_pre_registration_ad_images_asset: [String!]
  app_pre_registration_ad_youtube_videos: [String!]
  app_pre_registration_ad_youtube_videos_asset: [String!]
  call_ad_business_name: String
  call_ad_call_tracked: Boolean
  call_ad_conversion_action: String
  call_ad_conversion_reporting_state: String
  call_ad_country_code: String
  call_ad_description1: String
  call_ad_description2: String
  call_ad_disable_call_conversion: Boolean
  call_ad_headline1: String
  call_ad_headline2: String
  call_ad_path1: String
  call_ad_path2: String
  call_ad_phone_number: String
  call_ad_phone_number_verification_url: String
  demand_gen_carousel_ad_business_name: String
  demand_gen_carousel_ad_call_to_action_text: String
  demand_gen_carousel_ad_carousel_cards: [String!]
  demand_gen_carousel_ad_carousel_cards_asset: [String!]
  demand_gen_carousel_ad_description: String
  demand_gen_carousel_ad_headline: String
  demand_gen_carousel_ad_logo_image: String
  demand_gen_carousel_ad_logo_image_asset: String
  demand_gen_multi_asset_ad_business_name: String
  demand_gen_multi_asset_ad_call_to_action_text: String
  demand_gen_multi_asset_ad_descriptions: [String!]
  demand_gen_multi_asset_ad_headlines: [String!]
  demand_gen_multi_asset_ad_lead_form_only: Boolean
  demand_gen_multi_asset_ad_logo_images: [String!]
  demand_gen_multi_asset_ad_logo_images_asset: [String!]
  demand_gen_multi_asset_ad_marketing_images: [String!]
  demand_gen_multi_asset_ad_marketing_images_asset: [String!]
  demand_gen_multi_asset_ad_portrait_marketing_images: [String!]
  demand_gen_multi_asset_ad_portrait_marketing_images_asset: [String!]
  demand_gen_multi_asset_ad_square_marketing_images: [String!]
  demand_gen_multi_asset_ad_square_marketing_images_asset: [String!]
  demand_gen_product_ad_breadcrumb1: String
  demand_gen_product_ad_breadcrumb2: String
  demand_gen_product_ad_business_name: String
  demand_gen_product_ad_call_to_action: String
  demand_gen_product_ad_call_to_action_asset: [String!]
  demand_gen_product_ad_description: String
  demand_gen_product_ad_headline: String
  demand_gen_product_ad_logo_image: String
  demand_gen_product_ad_logo_image_asset: [String!]
  demand_gen_video_responsive_ad_breadcrumb1: String
  demand_gen_video_responsive_ad_breadcrumb2: String
  demand_gen_video_responsive_ad_business_name: String
  demand_gen_video_responsive_ad_call_to_actions: [String!]
  demand_gen_video_responsive_ad_call_to_actions_asset: [String!]
  demand_gen_video_responsive_ad_descriptions: [String!]
  demand_gen_video_responsive_ad_headlines: [String!]
  demand_gen_video_responsive_ad_logo_images: [String!]
  demand_gen_video_responsive_ad_logo_images_asset: [String!]
  demand_gen_video_responsive_ad_long_headlines: [String!]
  demand_gen_video_responsive_ad_videos: [String!]
  demand_gen_video_responsive_ad_videos_asset: [String!]
  device_preference: String
  display_upload_ad_display_upload_product_type: String
  display_upload_ad_media_bundle: String
  display_upload_ad_media_bundle_asset: [String!]
  display_url: String
  expanded_dynamic_search_ad_description: String
  expanded_dynamic_search_ad_description2: String
  expanded_text_ad_description: String
  expanded_text_ad_description2: String
  expanded_text_ad_headline_part1: String
  expanded_text_ad_headline_part2: String
  expanded_text_ad_headline_part3: String
  expanded_text_ad_path1: String
  expanded_text_ad_path2: String
  final_app_urls: [String!]
  final_mobile_urls: [String!]
  final_url_suffix: String
  final_urls: [String!]
  hotel_ad: String
  image_ad_image_asset_asset: [String!]
  image_ad_image_url: String
  image_ad_mime_type: String
  image_ad_name: String
  image_ad_pixel_height: Float
  image_ad_pixel_width: Float
  image_ad_preview_image_url: String
  image_ad_preview_pixel_height: Float
  image_ad_preview_pixel_width: Float
  legacy_app_install_ad: String
  legacy_responsive_display_ad_accent_color: String
  legacy_responsive_display_ad_allow_flexible_color: Boolean
  legacy_responsive_display_ad_business_name: String
  legacy_responsive_display_ad_call_to_action_text: String
  legacy_responsive_display_ad_description: String
  legacy_responsive_display_ad_format_setting: String
  legacy_responsive_display_ad_logo_image: String
  legacy_responsive_display_ad_long_headline: String
  legacy_responsive_display_ad_main_color: String
  legacy_responsive_display_ad_marketing_image: String
  legacy_responsive_display_ad_price_prefix: String
  legacy_responsive_display_ad_promo_text: String
  legacy_responsive_display_ad_short_headline: String
  legacy_responsive_display_ad_square_logo_image: String
  legacy_responsive_display_ad_square_marketing_image: String
  local_ad_call_to_actions: [String!]
  local_ad_descriptions: [String!]
  local_ad_headlines: [String!]
  local_ad_logo_images: [String!]
  local_ad_logo_images_asset: [String!]
  local_ad_marketing_images: [String!]
  local_ad_marketing_images_asset: [String!]
  local_ad_path1: String
  local_ad_path2: String
  local_ad_videos: [String!]
  local_ad_videos_asset: [String!]
  name: String
  resource_name: String
  responsive_display_ad_accent_color: String
  responsive_display_ad_allow_flexible_color: Boolean
  responsive_display_ad_business_name: String
  responsive_display_ad_call_to_action_text: String
  responsive_display_ad_control_spec_enable_asset_enhancements: Boolean
  responsive_display_ad_control_spec_enable_autogen_video: Boolean
  responsive_display_ad_descriptions: [String!]
  responsive_display_ad_format_setting: String
  responsive_display_ad_headlines: [String!]
  responsive_display_ad_logo_images: [String!]
  responsive_display_ad_logo_images_asset: [String!]
  responsive_display_ad_long_headline: String
  responsive_display_ad_main_color: String
  responsive_display_ad_marketing_images: [String!]
  responsive_display_ad_marketing_images_asset: [String!]
  responsive_display_ad_price_prefix: String
  responsive_display_ad_promo_text: String
  responsive_display_ad_square_logo_images: [String!]
  responsive_display_ad_square_logo_images_asset: [String!]
  responsive_display_ad_square_marketing_images: [String!]
  responsive_display_ad_square_marketing_images_asset: [String!]
  responsive_display_ad_youtube_videos: [String!]
  responsive_display_ad_youtube_videos_asset: [String!]
  responsive_search_ad_descriptions: [String!]
  responsive_search_ad_headlines: [String!]
  responsive_search_ad_path1: String
  responsive_search_ad_path2: String
  shopping_comparison_listing_ad_headline: String
  shopping_product_ad: String
  shopping_smart_ad: String
  smart_campaign_ad_descriptions: [String!]
  smart_campaign_ad_headlines: [String!]
  system_managed_resource_source: String
  tracking_url_template: String
  travel_ad: String
  type: String
  url_collections: [String!]
  url_custom_parameters: [String!]
  video_ad_bumper_action_button_label: String
  video_ad_bumper_action_headline: String
  video_ad_bumper_companion_banner_asset: String
  video_ad_in_feed_description1: String
  video_ad_in_feed_description2: String
  video_ad_in_feed_headline: String
  video_ad_in_feed_thumbnail: String
  video_ad_in_stream_action_button_label: String
  video_ad_in_stream_action_headline: String
  video_ad_in_stream_companion_banner_asset: String
  video_ad_non_skippable_action_button_label: String
  video_ad_non_skippable_action_headline: String
  video_ad_non_skippable_companion_banner_asset: String
  video_ad_out_stream_description: String
  video_ad_out_stream_headline: String
  video_ad_video_asset: String
  video_responsive_ad_breadcrumb1: String
  video_responsive_ad_breadcrumb2: String
  video_responsive_ad_call_to_actions: [String!]
  video_responsive_ad_companion_banners: [String!]
  video_responsive_ad_companion_banners_asset: [String!]
  video_responsive_ad_descriptions: [String!]
  video_responsive_ad_headlines: [String!]
  video_responsive_ad_long_headlines: [String!]
  video_responsive_ad_videos: [String!]
  video_responsive_ad_videos_asset: [String!]
}

type Address {
  id: ID!
  name: String!
}

type BlogBlock {
  body_text: String
  description: String
  first_list: String
  headline: String
  id: ID!
  last_list: String
  last_text: String
  list: String
  photo: PhotoForBlock
  position_block: Float
  styles: String
  text: String
  text_left: String
  text_right: String
  type_block: String
}

type BlogMetaInfo {
  categoric: String
  constructor_blog_id: ID
  date_when_will_post_blog: String
  global_script: String
  id: ID!
  meta_tag_description: String
  meta_tag_title: String
  schema_script: String
  url_for_blog: String
}

type BlogPreview {
  constructor_blog_id: ID
  date: String
  description: String
  id: ID!
  photo: PhotoForBlock
  title: String
  type_block: String
}

type Car {
  id: ID!
  make: String!
  model: String!
  year: Int!
}

type CarMake {
  car_make: String!
}

type CarTemplate {
  id: ID!
  template_id: ID!
  workiz_id: String!
}

input ChangeBlogPostStatusDto {
  id: String!
  is_posted: Boolean = false
}

input ChangePasswordDto {
  new_password: String!
  old_password: String!
}

enum ChatType {
  DEFAULT
  WITH_API
}

type ConstructedBlock {
  body_text: String
  constructed_page_id: ID!
  constructed_photo_id: ID
  description: String
  description_secondary: String
  first_list: String
  headline: String
  id: ID!
  last_list: String
  last_text: String
  list: String
  phone: String
  photo: ConstructedPhoto
  position_block: Float
  state: String
  styles: String
  text: String
  text_left: String
  text_right: String
  type_block: String
}

input ConstructedBlockDto {
  body_text: String
  description: String
  description_secondary: String
  first_list: String
  headline: String
  last_list: String
  last_text: String
  list: String
  phone: String
  photo: ConstructedPhotoDto
  position_block: Float
  state: String
  styles: String
  text: String
  text_left: String
  text_right: String
  type_block: String
}

type ConstructedMetaInfo {
  categoric: String
  constructed_page_id: ID!
  country: String
  date_when_will_post_blog: String
  global_script: String
  id: ID!
  map_link: String
  meta_tag_description: String
  meta_tag_title: String
  name: String
  redirect_url: String
  salary: String
  schema_script: String
  state: String
  url: String
  video_link: String
}

input ConstructedMetaInfoDto {
  categoric: String
  country: String
  date_when_will_post_blog: String
  global_script: String
  map_link: String
  meta_tag_description: String
  meta_tag_title: String
  name: String
  redirect_url: String
  salary: String
  schema_script: String
  state: String
  url: String
  video_link: String
}

type ConstructedPage {
  blocks: [ConstructedBlock!]
  constructed_page_company: ConstructedPageCompany
  constructed_page_company_id: ID
  id: ID!
  is_posted: Boolean
  meta_info: ConstructedMetaInfo
  post_date: Float
  preview: ConstructedPreview
  type: ConstructedPageType!
}

type ConstructedPageCompany {
  id: ID!
  name: String!
}

enum ConstructedPageType {
  BLOG
  LOCATION
  VACANCY
}

type ConstructedPhoto {
  alt: String
  file: File!
  file_id: ID!
  id: ID!
  title: String
}

input ConstructedPhotoDto {
  alt: String
  file: Upload!
  title: String
}

type ConstructedPreview {
  constructed_page_id: ID!
  constructed_photo_id: ID
  date: String
  description: String
  experience: String
  headline: String
  id: ID!
  photo: ConstructedPhoto
  type_block: String
}

input ConstructedPreviewDto {
  date: String
  description: String
  experience: String
  headline: String
  photo: ConstructedPhotoDto
  type_block: String
}

type ConstructorBlog {
  blocks: [BlogBlock!]!
  id: ID!
  is_posted: Boolean
  metaInfo: BlogMetaInfo
  post_date: Float
  post_date_future: Float
  preview_info: BlogPreview
}

type ConstructorBlogFilterableWithCountDto {
  blog: [ConstructorBlog!]
  blogCount: Float
}

type Countie {
  city: String!
  county: String!
  id: ID!
  state: String!
}

input CreateBlogBlockDto {
  body_text: String
  description: String
  first_list: String
  headline: String
  last_list: String
  last_text: String
  list: String
  photo: CreatePhotoForBlockDto
  position_block: Float
  styles: String
  text: String
  text_left: String
  text_right: String
  type_block: String
}

input CreateBlogMetaInfoDto {
  categoric: String
  constructor_blog_id: ID
  date_when_will_post_blog: String
  global_script: String
  meta_tag_description: String
  meta_tag_title: String
  schema_script: String
  url_for_blog: String
}

input CreateBlogPreviewDto {
  constructor_blog_id: ID
  date: String
  description: String
  photo: CreatePhotoForBlockDto
  title: String
  type_block: String
}

input CreateCarDto {
  make: String!
  model: String!
  year: Int!
}

input CreateCarTemplateDto {
  template_id: ID!
  workiz_id: String!
}

input CreateConstructedPageCompanyDto {
  name: String!
}

input CreateConstructedPageDto {
  blocks: [ConstructedBlockDto!]
  constructed_page_company_id: ID
  is_posted: Boolean
  meta_info: ConstructedMetaInfoDto
  post_date: Float
  preview: ConstructedPreviewDto
  type: ConstructedPageType!
}

input CreateConstructorBlogDto {
  blocks: [CreateBlogBlockDto!]
  is_posted: Boolean = false
  metaInfo: CreateBlogMetaInfoDto
  post_date: Float
  post_date_future: Float
  preview_info: CreateBlogPreviewDto
}

input CreateH2TextDto {
  H2: String
  Text: String
}

input CreateInventoryRequestDto {
  logist_items: [LogistInventoryItemDto!]!
  tech_id: ID!
}

input CreateItemTemplateDto {
  quantity: Int!
  sku: String!
  template_id: ID!
  uhs_sku: String!
}

input CreateJobDto {
  Address: String!
  City: String!
  Email: String!
  FirstName: String!
  JobDateTime: String!
  JobNotes: String!
  JobType: String!
  LastName: String!
  Metro: String!
  Phone: String!
  PostalCode: String!
  State: String!
}

input CreateKeyDto {
  car_ids: [ID!]
  custom_price: Float
  estimate_price: String
  name: String!
  photo: Upload
}

input CreateLocationDto {
  About_city: CreateH2TextDto
  About_us: CreateH2TextDto
  Description: String
  H1: String
  Hour_24_services: CreateLocationServicesDto
  Map_link: String
  Name: String
  Our_services: CreateLocationServicesDto
  Phone_number: String
  Photo: CreateLocationThumbnailDto
  Prices: CreateLocationPricesDto
  Rich_template: String
  State: String
  Subtitle: String
  Testimonials: CreateLocationTestimonialsDto
  Thumbnail: CreateLocationThumbnailDto
  Title: String
  Url: String
  published_at: Float
}

input CreateLocationPricesDto {
  H2: String
  Text: String
  description_right: String
  list: [CreateLocationPricesListDto!]
  location_id: ID
}

input CreateLocationPricesListDto {
  name: String
  price: String
}

input CreateLocationServicesDto {
  H2: String
  List: String
  Text_after: String
  Text_before: String
  hour_24_service_id: ID
  our_service_id: ID
}

input CreateLocationTestimonialsDto {
  H2: String
  Reviews: [CreateTestimonialsReviewsDto!]
  Text_before: String
  location_id: ID
}

input CreateLocationThumbnailDto {
  location_photo_id: ID
  location_thubnail_id: ID
  name: String
  url: String
}

input CreateLocksmithDto {
  address: [String!]!
  confirmed: Boolean
  description: String
  file: Upload
  file_url: String
  is_verified: Boolean! = false
  link_to_map: String!
  link_to_site: String!
  mail: String!
  name: String!
  owner_name: String
  owner_phone: String
  phone: String!
  priority: Float
  schedules: [LocksmithScheduleDto!]!
  services: [String!]!
  url: String
}

input CreateOilChange {
  date: Int!
  milage: Int!
  next_date: Int!
  receipt_picture: Upload
  technician_id: ID!
  vehicle_picture: Upload
}

input CreateOrUpdateUserInfoDto {
  id: ID
  key: String!
  user_id: ID!
  value: String!
}

input CreateOrUpdateUserNoteDto {
  id: ID
  note: String!
  user_id: ID!
  week_end: Int!
  week_start: Int!
}

input CreateOrUpdateUserScheduleDto {
  id: ID
  user_id: ID!
  work_from: Int!
  work_to: Int!
}

input CreateOrUpdateUserScheduleRequestDto {
  id: ID
  work_from: Int!
  work_to: Int!
}

input CreateOrderDto {
  address: String
  key_service_type: KeyServiceType!
  keys: [OrderKeyDto!]
  notes: String!
  phone: String
  service_type: ServiceType!
}

input CreatePhotoForBlockDto {
  alt: String
  blog_block_id: ID
  constructor_blog_id: ID
  link: String
  title: String
}

input CreateReferralDto {
  address: String
  first_name: String!
  last_name: String
  phone: String!
  service_type: String
}

input CreateTechnicianDto {
  first_name: String!
  last_name: String!
  license_plate: String!
  manager_id: ID
  phone: String!
  vin: String
}

input CreateTechnicianManagerDto {
  first_name: String!
  last_name: String!
  phone: String!
}

input CreateTemplateDto {
  name: String!
}

input CreateTestimonialsReviewsDto {
  Name: String
  Photo: String
  Review_text: String
  Type_of_service: String
}

input CreateTimeTemplateDto {
  color: String!
  name: String!
  value: String!
}

input CreateUserInfoDto {
  key: String!
  user_id: ID!
  value: String!
}

input CreateUserNoteDto {
  note: String!
  user_id: ID!
  week_end: Int!
  week_start: Int!
}

input CreateUserScheduleDto {
  user_id: ID!
  work_from: Int!
  work_to: Int!
}

type CtmCall {
  account_id: Int!
  audio: String
  billed_amount: Int!
  billed_at: String!
  call_status: String!
  called_at: String!
  caller_number_format: String!
  city: String!
  cnam: String!
  country: String!
  day: String!
  dial_status: String!
  direction: String!
  duration: Int
  hold_time: Int!
  hour: String!
  id: String!
  month: String!
  name: String!
  notes: String!
  postal_code: String!
  ring_time: Int!
  sid: String!
  source: String!
  source_id: Int!
  source_sid: String!
  state: String!
  status: String!
  talk_time: Int!
  tgid: Int!
  tracking_label: String!
  tracking_number: String!
  tracking_number_format: String!
  unix_time: Int!
  wait_time: Int!
}

type CtmGetCallsDto {
  calls: [CtmCall!]!
  page: Int!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

input CtmGetCallsOptionDto {
  """the end date for the search (YYYY-MM-DD)"""
  end_date: String

  """
  search string to look for messages with specific callerid, caller_number, called_number, source name, etc.
  """
  filter: String

  """the page number"""
  page: Int!

  """the number of items per page, defaults to 10"""
  per_page: Int

  """the start date for the search (YYYY-MM-DD)"""
  start_date: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type File {
  format: String!
  id: ID!
}

input FilterableBlogDto {
  blockDescription: String
  limitPaginate: Float
  metaInfoUrlForBlog: String
  pagePaginate: Float
  posted: Boolean
  previewInfoDate: String
  previewInfoTitle: String
  sortField: SortBlogField
  sortType: SortEnum
}

"""Chouse which type of sorting would you like to use"""
enum FilterableLocationEnum {
  """filter by Description"""
  Description

  """filter by H1"""
  H1

  """filter by Map_link"""
  Map_link

  """filter by Name"""
  Name

  """filter by Phone_number"""
  Phone_number

  """filter by Rich_template"""
  Rich_template

  """filter by State"""
  State

  """filter by Subtitle"""
  Subtitle

  """filter by title"""
  Title

  """filter by Url """
  Url

  """filter by created_at"""
  created_at

  """filter by id"""
  id

  """filter by published_at"""
  published_at

  """filter by updated_at"""
  updated_at
}

type FindContainerAndTemplate {
  container: [WorkizContainerInfo!]!
  template: [Template!]!
}

input FindPaginationDto {
  skip: Int!
  take: Int!
}

type FineTune {
  created_at: Int!
  id: ID!
  model: String!
  openai_file_id: String!
  openai_id: String!
}

type FineTuneItem {
  deleted: Boolean!
  id: ID!
  prompt: String!
  text: String!
}

type H2Text {
  H2: String
  Text: String
  id: ID!
}

type InventoryRequest {
  created_at: Float!
  id: ID!
  logist_items: [LogistInventoryItem!]!
  request_invoices: [InventoryRequestInvoice!]!
  status: InventoryRequestStatus!
  tech: User!
  tech_id: ID!
}

type InventoryRequestInvoice {
  file: File!
  file_id: ID!
  id: ID!
  inventory_request_id: ID!
  tech_items: [TechInventoryItem!]!
}

input InventoryRequestInvoiceDto {
  file: Upload!
  tech_items: [TechInventoryItemDto!]!
}

enum InventoryRequestStatus {
  APPROVED_BY_LOGIST
  APPROVED_BY_TECH
  REQUESTED
}

input InviteUserDto {
  email: String
  location: String
  name: String
  role: UserRole = ADMIN
  workiz_id: String
}

type InvitedUser {
  email: String!
  id: ID!
  key: String!
  location: String
  name: String!
  role: UserRole!
  workiz_id: String
}

type ItemCompareResult {
  actual_quantity: Int!
  difference: Int!
  name: String!
  sku: String!
  template_item_id: String!
  template_quantity: Int!
  uhs_sku: String!
}

type ItemTemplate {
  id: ID!
  quantity: Int!
  sku: String!
  template_id: ID!
  uhs_sku: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type JobDto {
  Address: String!
  City: String!
  ClientId: Float!
  Comments: String!
  Company: String!
  Country: String!
  CreatedBy: String!
  CreatedDate: String
  Email: String!
  FirstName: String!
  JobAmountDue: String
  JobDateTime: String
  JobEndDateTime: String
  JobNotes: String
  JobSource: String!
  JobTotalPrice: String
  JobType: String
  LastName: String!
  LastStatusUpdate: String
  Latitude: String!
  Longitude: String!
  PaymentDueDate: String
  Phone: String!
  PhoneExt: String!
  PostalCode: String!
  SecondPhone: String!
  SecondPhoneExt: String!
  SerialId: Float!
  State: String!
  Status: String!
  SubStatus: String!
  SubTotal: String
  UUID: String!
  Unit: String!
}

type Key {
  cars: [KeyCar!]
  custom_price: Float
  estimate_price: String
  id: ID!
  name: String!
  photo: File
  photo_id: String
}

type KeyCar {
  car_id: ID!
  id: ID!
  key_id: ID!
}

enum KeyServiceType {
  CAR_KEY_COPY
  CAR_KEY_POGROMING
  IGNITION_CHANGE_REPAIR
  NEW_CAR_KEY
}

type Location {
  About_city: H2Text
  About_us: H2Text
  Description: String
  H1: String
  Hour_24_services: LocationServices
  Map_link: String
  Name: String
  Our_services: LocationServices
  Phone_number: String
  Photo: LocationThumbnail
  Prices: LocationPrices
  Rich_template: String
  State: String
  Subtitle: String
  Testimonials: LocationTestimonials
  Thumbnail: LocationThumbnail
  Title: String
  Url: String
  created_at: Float!
  id: ID!
  published_at: Float
  updated_at: Float
}

input LocationFilterStateUrlDto {
  State: String!
  Url: String!
}

input LocationFilterableDto {
  Description: String
  H1: String
  Map_link: String
  Name: String
  Phone_number: String
  Rich_template: String
  State: String
  Subtitle: String
  Title: String
  Url: String
  created_at: Float
  id: ID
  limitPaginate: Float
  pagePaginate: Float
  published_at: Float
  sortField: FilterableLocationEnum
  sortType: SortEnum
  updated_at: Float
}

type LocationFilterableWithCountDto {
  location: [Location!]
  locationCount: Float
}

type LocationFormatsThumbnail {
  ext: String
  hash: String
  height: Float
  id: ID!
  location_formats_id: ID
  mime: String
  name: String
  path: String
  size: Float
  url: String
  width: Float
}

type LocationPhoto {
  awsKey: String
  awsUrl: String
  id: ID!
}

type LocationPrices {
  H2: String
  Text: String
  description_right: String
  id: ID!
  list: [LocationPricesList!]
  location_id: ID
}

type LocationPricesList {
  id: ID!
  name: String
  price: String
}

type LocationServices {
  H2: String
  List: String
  Text_after: String
  Text_before: String
  hour_24_service_id: ID
  id: ID!
  our_service_id: ID
}

type LocationTestimonials {
  H2: String
  Reviews: [TestimonialsReviews!]
  Text_before: String
  id: ID!
  location_id: ID
}

type LocationThumbnail {
  created_at: Float!
  id: ID!
  location_photo_id: ID!
  location_thubnail_id: ID!
  name: String
  updated_at: Float!
  url: String
}

type Locksmith {
  address: [String!]!
  confirmed: Boolean
  description: String
  file_id: ID
  file_url: String
  id: ID!
  is_verified: Boolean!
  link_to_map: String!
  link_to_site: String!
  mail: String!
  name: String!
  owner_name: String
  owner_phone: String
  phone: String!
  priority: Float
  reviews: [LocksmithReview!]!
  schedules: [LocksmithSchedule!]!
  services: [String!]!
  url: String
}

type LocksmithReview {
  created_at: Float!
  id: ID!
  locksmith_id: String!
  name: String!
  rating: Float
  status: ReviewStatus
  text: String!
  title: String!
  updated_at: Float!
}

type LocksmithReviewWithEmail {
  created_at: Float!
  email: String!
  id: ID!
  locksmith_id: String!
  name: String!
  rating: Float
  status: ReviewStatus
  text: String!
  title: String!
  updated_at: Float!
}

type LocksmithSchedule {
  close_at: DateTime
  id: ID!
  locksmith_id: ID!
  name: Week!
  open_at: DateTime
}

input LocksmithScheduleDto {
  close_at: DateTime
  name: Week!
  open_at: DateTime
}

type LocksmithWithCountNewReviewsDto {
  address: [Address!]!
  count_new_reviews: Float!
  description: String
  id: ID!
  is_verified: Boolean!
  link_to_map: String!
  link_to_site: String!
  mail: String!
  name: String!
  owners_name: String
  owners_phone: String
  phone: String!
  photo: String
  priority: Float
  reviews: [Reviews!]!
  schedule: [Schedule!]!
  services: [String!]!
  url: String
  zips: [String!]
}

type Log {
  action: String!
  created_at: Int!
  group: LogGroup!
  id: ID!
  message: String
  type: LogType!
  user_id: ID
}

enum LogGroup {
  DEVELOPER
  USER
}

enum LogType {
  ERROR
  SUCCESS
  WARNING
}

type LogWithUser {
  action: String!
  created_at: Int!
  group: LogGroup!
  id: ID!
  message: String
  type: LogType!
  user: User
  user_id: ID
}

input LoginCredential {
  email: String!
  password: String!
}

type LogistInventoryItem {
  id: ID!
  inventory_request_id: ID!
  qty: Int!
  sku: String!
}

input LogistInventoryItemDto {
  qty: Int!
  sku: String!
}

type LogsPaginated {
  items: [LogWithUser!]!
  total: Int!
}

type Message {
  created: Int!
  database_query: String
  database_result: String
  finish_reason: String!
  id: ID!
  openai_id: String!
  prompt: String!
  text: String!
  total_tokens: Int!
  type: ChatType!
}

type Mutation {
  acceptInventoryRequestByLogist(inventory_request: AcceptInventoryRequestByLogistDto!): InventoryRequest!
  acceptInventoryRequestByTech(inventory_request: AcceptInventoryRequestByTechDto!): InventoryRequest!
  acceptInvite(accept_invite_dto: AcceptInviteDto!): User!
  addManyCarsToKey(car_ids: [ID!]!, key_id: ID!): [KeyCar!]!
  approveUserScheduleRequest(request_ids: [ID!]!): [UserSchedule!]!
  assignManyTemplateToCar(createCarTemplateDto: [CreateCarTemplateDto!]!): [CarTemplate!]!
  assignTechToJobWorkiz(id: String!, userName: String!): SendDto!

  """change blog posted"""
  changeBlogPostStatus(changeBlogPostStatusDto: ChangeBlogPostStatusDto!): ConstructorBlog!
  changeCallsDateToIso: String!
  changeCallsJobIds: String!
  changePassword(passwords: ChangePasswordDto!): SendDto!
  changeUserPassByEmail(email: String!, new_password: String!): SendDto!

  """create blog"""
  createBlog(createBlog: CreateConstructorBlogDto!): ConstructorBlog!

  """method to create photo"""
  createBlogPhoto(picture: Upload!): PhotoBlog!
  createCar(carDto: CreateCarDto!): Car!
  createConstructedPage(constructed_page: CreateConstructedPageDto!): ConstructedPage!
  createConstructedPageCompany(company_dto: CreateConstructedPageCompanyDto!): ConstructedPageCompany!
  createFineTuneItem(prompt: String!, text: String!): FineTuneItem!
  createInventoryRequest(inventory_request_dto: CreateInventoryRequestDto!): InventoryRequest!
  createKey(key_dto: CreateKeyDto!): Key!
  createLocation(createLocationDto: CreateLocationDto!): Location!
  createLocationPhoto(picture: Upload!): LocationPhoto!
  createLocksmith(locksmith: CreateLocksmithDto!): Locksmith!
  createManyItemTemplates(createItemTemplateDto: [CreateItemTemplateDto!]!): [ItemTemplate!]!
  createManyTemplates(createTemplateDto: [CreateTemplateDto!]!): [Template!]!
  createManyUsersSchedules(users_schedules: [CreateUserScheduleDto!]!): [UserSchedule!]!
  createNewJobWorkiz(createJobDto: CreateJobDto!): SendDto!
  createOilChange(oil_change: CreateOilChange!): OilChange!
  createOrUpdateManyUsersSchedules(user_schedules: [CreateOrUpdateUserScheduleDto!]!): [UserSchedule!]!
  createOrUpdateUserInfo(user_infos: [CreateOrUpdateUserInfoDto!]!): [UserInfo!]!
  createOrUpdateUserNote(user_note: CreateOrUpdateUserNoteDto!): UserNote!
  createOrUpdateUserScheduleRequest(schedule_request: [CreateOrUpdateUserScheduleRequestDto!]!): [UserScheduleRequest!]!
  createOrder(order_dto: CreateOrderDto!): Order!
  createReferral(referral: CreateReferralDto!): Referral!
  createSystemSettings(max_tokens: Int!): SystemSettings!
  createTechnician(technician: CreateTechnicianDto!): Technician!
  createTechnicianManager(technician_manager: CreateTechnicianManagerDto!): TechnicianManager!
  createTimeTemplate(time_template: CreateTimeTemplateDto!): TimeTemplate!
  createUserInfo(user_info: CreateUserInfoDto!): UserInfo!
  createUserNote(user_note: CreateUserNoteDto!): UserNote!
  createUserSchedule(user_schedule: CreateUserScheduleDto!): UserSchedule!
  declineUserScheduleRequest(request_ids: [ID!]!): [UserScheduleRequest!]!

  """delete blog by id"""
  deleteBlogById(id: String!): ConstructorBlog!

  """deleted photo by id"""
  deleteBlogPhotoById(id: String!): PhotoBlog!
  deleteConstructedPageById(id: ID!): ID!
  deleteConstructedPageCompany(id: ID!): ID!
  deleteFineTuneItem(id: ID!): ID!
  deleteKey(id: ID!): ID!
  deleteKeyCar(id: ID!): ID!
  deleteLocationById(id: String!): Location!
  deleteLocksmithById(id: ID!): ID!
  deleteManyInvitedUsers(user_ids: [ID!]!): [String!]!
  deleteManyItemTemplates(ids: [ID!]!): [ID!]!
  deleteManyKeyCar(ids: [ID!]!): [ID!]!
  deleteManyPhoto(keys: [String!]!): SendDto!
  deleteManyTemplates(ids: [ID!]!): [ID!]!
  deleteManyUserInfo(ids: [ID!]!): [ID!]!
  deleteManyUserScheduleRequest(ids: [ID!]!): [ID!]!
  deleteManyUserSchedules(ids: [ID!]!): [ID!]!
  deleteManyUsers(user_ids: [ID!]!): [String!]!
  deleteOilChange(id: ID!): ID!
  deletePhotoLocationById(id: String!): LocationPhoto!
  deleteTechnician(id: ID!): ID!
  deleteTechnicianManager(id: ID!): ID!
  deleteTimeTemplate(id: ID!): ID!
  deleteUserInfo(id: ID!): ID!
  deleteUserNote(id: ID!): ID!
  deleteUserSchedule(id: ID!): ID!
  getCallsByRange(account: Account! = main, from_month: Int = 1, from_year: Int = 18): SendDto!
  getUnsavedJobs: String!
  inviteUserToApp(inviteUserDto: InviteUserDto!): InvitedUser!
  login(login_dto: LoginCredential!): TokenResponse!
  logout(refresh_token: String!): SendDto!
  parseBlogs(constructed_page_company_id: String!): SendDto!
  parseCalls(account: Account! = main, from_month: Int = 1, from_year: Int = 18): SendDto!
  parseLocation(constructed_page_company_id: String!): SendDto!
  prepareFileForFineTune(filename: String!): String!
  registrationCustomer(registration_dto: RegistrationCustomerDto!): User!
  requestLocksmith(locksmith: RequestLocksmithDto!): Locksmith!
  requestLocksmithReview(review: RequestLocksmithReviewDto!): LocksmithReview!
  reviewManyLocksmithReviews(reviews: [ReviewLocksmithReviewDto!]!): [LocksmithReview!]!
  saveCountie: Countie!
  sendMessage(chat_type: ChatType! = DEFAULT, prompt: String!): Message!
  sendMessageToOpenAi(message: String!): String!
  sendRespondTo(email: String!, file: Upload, text: String!, title: String!): String!
  sendSlkGlobalInfo(file: Upload, text: String!): String!
  setJobsCallFlow: String!
  speechToText(call_id: String!): Transcription!
  startFineTune: FineTune!
  startUpdateJobsInfo(account: Account! = main, from_month: Int = 1, from_year: Int = 18): String!
  transformAllLocation(constructed_page_company_id: String!, locations: JSON!): SendDto!
  transformBlogs(blogs: JSON!, constructed_page_company_id: String!): SendDto!

  """update blogs"""
  updateBlog(updateBlog: UpdateConstructorBlogDto!): ConstructorBlog!
  updateConstructedPage(constructed_page: UpdateConstructedPageDto!): ConstructedPage!
  updateConstructedPageCompany(company_dto: UpdateConstructedPageCompanyDto!): ConstructedPageCompany!
  updateCurrentUser(user: UpdateCurrentUserDto!): User!
  updateFineTuneItem(fine_tune_item: UpdateFineTuneItemDto!): FineTuneItem!
  updateItemTemplate(updateItemTemplateDto: UpdateItemTemplateDto!): ItemTemplate!
  updateKey(key_dto: UpdateKeyDto!): Key!
  updateLocation(updateLocationDto: UpdateLocationDto!): Location!
  updateLocksmith(locksmith: UpdateLocksmithDto!): Locksmith!
  updateManyUsersSchedules(users_schedules: [UpdateUserScheduleDto!]!): [UserSchedule!]!
  updateOilChange(oil_change: UpdateOilChange!): OilChange!
  updateSystemSettings(system_settings: UpdateSystemSettingsDto!): SystemSettings!
  updateTechnician(technician: UpdateTechnicianDto!): Technician!
  updateTechnicianManager(technician_manager: UpdateTechnicianManagerDto!): TechnicianManager!
  updateTemplate(updateTemplateDto: UpdateTemplateDto!): Template!
  updateTimeTemplate(time_template: UpdateTimeTemplateDto!): TimeTemplate!
  updateUser(user: UpdateUserDto!): User!
  updateUserCustomerInfo(user_customer_info_dto: UpdateUserCustomerInfoDto!): UserCustomerInfo!
  updateUserInfo(user_info: UpdateUserInfoDto!): UserInfo!
  updateUserNote(user_note: UpdateUserNoteDto!): UserNote!
  updateUserSchedule(user_schedule: UpdateUserScheduleDto!): UserSchedule!
  uploadCV(email: String!, file: Upload!, last_name: String!, name: String!, phone: String!): String!
}

type OilChange {
  date: Int!
  id: ID!
  milage: Int!
  next_date: Int!
  receipt_picture: File
  receipt_picture_id: ID
  technician: Technician!
  technician_id: ID!
  vehicle_picture: File
  vehicle_picture_id: ID
}

type OpenAiFile {
  bytes: Int!
  created_at: Int!
  filename: String!
  id: String!
  object: String!
  purpose: String!
  status: String!
}

type OpenAiFineTune {
  created_at: Int!
  events: [OpenAiFineTuneEvent!]!
  fine_tuned_model: String
  id: String!
  model: String!
  status: String!
  updated_at: Int!
}

type OpenAiFineTuneEvent {
  created_at: Int!
  level: String!
  message: String!
}

type Order {
  address: String!
  customer: User!
  id: ID!
  key_service_type: KeyServiceType!
  keys: [OrderKey!]!
  notes: String!
  phone: String!
  service_type: ServiceType!
  user_id: ID!
}

type OrderKey {
  count: Int
  id: ID!
  key: Key!
  key_id: ID!
  order_id: ID!
}

input OrderKeyDto {
  count: Int
  key_id: ID!
}

type PaginatedInventoryRequests {
  items: [InventoryRequest!]!
  total: Int!
}

type PaginatedJobDto {
  has_more: Boolean!
  items: [JobDto!]!
}

type PaginatedLocksmith {
  items: [Locksmith!]!
  total: Int!
}

type PaginatedMessages {
  items: [Message!]!
  total: Int!
}

type PhotoBlog {
  awsKey: String
  awsUrl: String
  blogsLink: [String!]
  id: ID!
}

type PhotoForBlock {
  alt: String
  blog_block_id: ID
  constructor_blog_id: ID
  id: ID!
  link: String
  title: String
}

type Query {
  findTranscription(call_id: String!): Transcription!
  generateDifferenceReport(only_less: Boolean! = true, workiz_id: String!): [ItemCompareResult!]!
  generateDifferenceReportForAll: [ItemCompareResult!]!
  getAdAll: String!
  getAdAllCampaigns: [AdCampaignDto!]!
  getAdAllGroups: [AdGroupDto!]!
  getAdAllPages: [AdPageDto!]!
  getAdAllUserLocationMetrics: [AdAdUserLocationMetricsDto!]!
  getAdCampaigns: [AdCampaignDto!]!
  getAdCustomer: [String!]!
  getAdGroups: [AdGroupDto!]!
  getAdPages: [AdPageDto!]!

  """get all photo """
  getAllBlogPhoto: [PhotoBlog!]!
  getAllCars: [Car!]!
  getAllContainers: [WorkizContainer!]!
  getAllFiles: [OpenAiFile!]!
  getAllInvitedUsers: [InvitedUser!]!
  getAllJ: String!
  getAllJobsWorkiz(
    offset: Int!

    """Max 100"""
    records: Int!
  ): PaginatedJobDto!
  getAllLocation: [Location!]!
  getAllLocationPhoto: [LocationPhoto!]!
  getAllMessages(chat_type: ChatType! = DEFAULT): [Message!]!
  getAllOrders: [Order!]!
  getAllReferrals: [Referral!]!
  getAllTechsWorkiz: [TechnicianWorkiz!]!
  getAllTemplates: [Template!]!
  getAllTimeTemplates: [TimeTemplate!]!
  getAllUsers: [User!]!
  getAllUsersWorkiz: [TechnicianWorkiz!]!
  getAllWorkizLeads: [JobDto!]!

  """get all blogs"""
  getBlogs: [ConstructorBlog!]!

  """get 1 blog by id"""
  getBlogsById(id: String!): ConstructorBlog!

  """this method get blogs by field description which like inputed"""
  getBlogsFilterByMetaBlogUrl(metaBlogUrl: String!): ConstructorBlog!
  getCalls(ctmGetCallsOptionDto: CtmGetCallsOptionDto!): CtmGetCallsDto!
  getCallsDurations(from: String!): Int!
  getCommission(account: Account! = main, from_month: Int = 1, from_year: Int = 18): String!
  getConstructedPageById(id: ID!): ConstructedPage!
  getConstructedPageByUrl(url: String!): ConstructedPage!
  getConstructedPageCompanies: [ConstructedPageCompany!]!
  getConstructedPages(constructed_page_company_id: ID, is_posted: Boolean, pagination: FindPaginationDto, type: ConstructedPageType): [ConstructedPage!]!
  getContainerById(id: String!): FindContainerAndTemplate!
  getCurrentUser: User!

  """
  universal sorting blog method, this method find by inputed field and can be sorted and paginate
  """
  getFilteredBlog(filter: FilterableBlogDto!): ConstructorBlogFilterableWithCountDto!
  getFineTuneList: [FineTuneItem!]!
  getFullLastFineTune: OpenAiFineTune!
  getInventoryRequestById(id: ID!): InventoryRequest!
  getInventoryRequests(pagination: FindPaginationDto!): PaginatedInventoryRequests!
  getJobs: String!
  getKeyByID(id: ID!): Key!
  getKeysByCar(car_id: ID!): [Key!]!
  getLocationById(id: String!): Location!
  getLocationByState(state: String!): [Location!]!
  getLocationByStateAndUrl(filter: LocationFilterStateUrlDto!): Location!
  getLocationFiltered(filter: LocationFilterableDto!): LocationFilterableWithCountDto!
  getLocationPaginate(paginate: FindPaginationDto!): [Location!]!
  getLocksmithById(id: ID!): Locksmith!
  getLocksmithWithUnreviewedReviews: [LocksmithWithCountNewReviewsDto!]!
  getLocksmiths(confirmed: Boolean!, pagination: FindPaginationDto!, search_value: String): PaginatedLocksmith!
  getLogs(pagination: FindPaginationDto!): LogsPaginated!
  getMessages(chat_type: ChatType! = DEFAULT, pagination: FindPaginationDto!): PaginatedMessages!
  getMyOrders: [Order!]!
  getMySchedule(from: Int!, to: Int!): UserWithSchedule!
  getOilChanges: [OilChange!]!
  getOrderById(id: ID!): Order!
  getPreparedCampaign: String!
  getSystemSettings: SystemSettings!
  getTechnicianManagers: [TechnicianManager!]!
  getTechnicians: [Technician!]!
  getTemplateById(id: ID!): Template!
  getUniqueLocations: [String!]
  getUnreviewedReviews: [LocksmithReviewWithEmail!]!
  getUsersWithSchedule(userWithScheduleDto: UserWithScheduleDto!): [UserWithSchedule!]!
  getWorkizClients: String!
  getWorkizJobById(id: String!): JobDto!
  getWorkizLeadById(id: String!): JobDto!
  listFineTunes: String!
  listModels: String!
  searchCars(make: String, model: String): [Car!]!
  testApi(method: String!, url: String!): String!
  transcriptCalls(from: String!, limit: Int): Int!
}

type Referral {
  address: String
  first_name: String!
  id: ID!
  last_name: String
  phone: String!
  service_type: String
}

input RegistrationCustomerDto {
  customer_info: UserCustomerInfoDto!
  email: String!
  location: String
  name: String!
  password: String!
  workiz_id: String
}

input RequestLocksmithDto {
  address: [String!]!
  description: String
  file: Upload
  file_url: String
  link_to_map: String!
  link_to_site: String!
  mail: String!
  name: String!
  owner_name: String
  owner_phone: String
  phone: String!
  schedules: [LocksmithScheduleDto!]!
  services: [String!]!
  url: String
}

input RequestLocksmithReviewDto {
  email: String!
  locksmith_id: String!
  name: String!
  rating: Float
  text: String!
  title: String!
}

input ReviewLocksmithReviewDto {
  id: ID!
  status: ReviewStatus
}

enum ReviewStatus {
  APPROVED
  REJECTED
  UNDER_CONSIDERATION
}

type Reviews {
  created_at: Float!
  id: ID!
  locksmith_id: String!
  name: String!
  rating: Float
  status: ReviewsStatus
  text: String!
  title: String!
  updated_at: Float!
}

enum ReviewsStatus {
  APPROVED
  REJECTED
  UNDER_CONSIDERATION
}

type Schedule {
  close_at: DateTime
  id: ID!
  name: Week!
  open_at: DateTime
}

type SendDto {
  message: String
  status: Float
}

enum ServiceType {
  AUTOMOTIVE
  CAR_KEY_DUPLICATION
  COMMERCIAL
  EMERGENCY
  MOBILE
  RESIDENTIAL
  SAFES
  SECURITY
}

"""Chouse which type of sorting would you like to use"""
enum SortBlogField {
  """filter by preview info date"""
  blog_previw_date

  """filter by blog Meta info date_when_will_post_blog"""
  date_when_will_post_blog

  """filter by is posted """
  is_posted

  """filter by meta tag description"""
  meta_tag_description

  """filter by meta tag title"""
  meta_tag_title

  """filter by post date"""
  post_date
}

"""Choose which type of sorting would you like to use"""
enum SortEnum {
  """
  Items are arranged from lowest to highest value:  0 to 9, and/or A to Z
  """
  ASC

  """
  Items are arranged from high to low or largest to smallest: 9 to 0,  and/or Z to A
  """
  DESC
}

type SystemSettings {
  active_model: String!
  id: ID!
  is_parsing: Boolean!
  max_tokens: Int!
  workiz_arizona_cookie: String!
  workiz_cookie: String!
}

type TechInventoryItem {
  id: ID!
  inventory_request_id: ID!
  qty: Int!
  request_invoice_id: ID!
  sku: String!
}

input TechInventoryItemDto {
  qty: Int!
  sku: String!
}

type Technician {
  first_name: String!
  id: ID!
  last_name: String!
  license_plate: String!
  manager_id: ID
  phone: String!
  technician_manager: TechnicianManager
  vin: String
}

type TechnicianManager {
  first_name: String!
  id: ID!
  last_name: String!
  phone: String!
}

type TechnicianWorkiz {
  active: Boolean!
  created: String!
  email: String!
  fieldTech: Boolean!
  id: String!
  name: String!
  role: String!
  serviceAreas: [String!]!
  skills: [String!]!
}

type Template {
  car_templates: [CarTemplate!]
  id: ID!
  items: [ItemTemplate!]
  name: String!
}

type TestimonialsReviews {
  Name: String
  Photo: String
  Review_text: String
  Type_of_service: String
  id: ID!
}

type TimeTemplate {
  color: String!
  id: ID!
  name: String!
  value: String!
}

type TokenResponse {
  access_token: String!
  refresh_token: String!
}

type Transcription {
  ctm_call_id: String!
  id: ID!
  text: String!
}

input UpdateBlogBlockDto {
  body_text: String
  description: String
  first_list: String
  headline: String
  id: ID
  last_list: String
  last_text: String
  list: String
  photo: UpdatePhotoForBlockDto
  position_block: Float
  styles: String
  text: String
  text_left: String
  text_right: String
  type_block: String
}

input UpdateBlogMetaInfoDto {
  categoric: String
  constructor_blog_id: ID
  date_when_will_post_blog: String
  global_script: String
  id: ID
  meta_tag_description: String
  meta_tag_title: String
  schema_script: String
  url_for_blog: String
}

input UpdateBlogPreviewDto {
  constructor_blog_id: ID
  date: String
  description: String
  id: ID
  photo: UpdatePhotoForBlockDto
  title: String
  type_block: String
}

input UpdateConstructedMetaInfoDto {
  categoric: String
  country: String
  date_when_will_post_blog: String
  global_script: String
  map_link: String
  meta_tag_description: String
  meta_tag_title: String
  name: String
  redirect_url: String
  salary: String
  schema_script: String
  state: String
  url: String
  video_link: String
}

input UpdateConstructedPageCompanyDto {
  id: ID!
  name: String
}

input UpdateConstructedPageDto {
  blocks: [UpdateOrCreateConstructedBlockDto!]
  constructed_page_company_id: ID
  delete_blocks_ids: [ID!]
  id: ID!
  is_posted: Boolean
  meta_info: UpdateConstructedMetaInfoDto
  post_date: Float
  preview: UpdateConstructedPreviewDto
  type: ConstructedPageType
}

input UpdateConstructedPhotoDto {
  alt: String
  file: Upload
  title: String
}

input UpdateConstructedPreviewDto {
  date: String
  description: String
  experience: String
  headline: String
  photo: UpdateConstructedPhotoDto
  type_block: String
}

input UpdateConstructorBlogDto {
  blocks: [UpdateBlogBlockDto!]
  id: ID!
  is_posted: Boolean
  metaInfo: UpdateBlogMetaInfoDto
  post_date: Float
  post_date_future: Float
  preview_info: UpdateBlogPreviewDto
}

input UpdateCurrentUserDto {
  location: String
  name: String
  workiz_id: String
}

input UpdateFineTuneItemDto {
  id: ID!
  prompt: String
  text: String
}

input UpdateH2TextDto {
  H2: String
  Text: String
  id: ID
}

input UpdateItemTemplateDto {
  id: ID!
  quantity: Int!
  sku: String!
  uhs_sku: String!
}

input UpdateKeyDto {
  custom_price: Float
  estimate_price: String
  id: ID!
  name: String
  photo: Upload
}

input UpdateLocationDto {
  About_city: UpdateH2TextDto
  About_us: UpdateH2TextDto
  Description: String
  H1: String
  Hour_24_services: UpdateLocationServicesDto
  Map_link: String
  Name: String
  Our_services: UpdateLocationServicesDto
  Phone_number: String
  Photo: UpdateLocationThumbnailDto
  Prices: UpdateLocationPricesDto
  Rich_template: String
  State: String
  Subtitle: String
  Testimonials: UpdateLocationTestimonialsDto
  Thumbnail: UpdateLocationThumbnailDto
  Title: String
  Url: String
  id: ID!
  published_at: Float
  updated_at: Float
}

input UpdateLocationPricesDto {
  H2: String
  Text: String
  description_right: String
  id: ID
  list: [UpdateLocationPricesListDto!]
  location_id: ID
}

input UpdateLocationPricesListDto {
  id: ID
  name: String
  price: String
}

input UpdateLocationServicesDto {
  H2: String
  List: String
  Text_after: String
  Text_before: String
  hour_24_service_id: ID
  id: ID
  our_service_id: ID
}

input UpdateLocationTestimonialsDto {
  H2: String
  Reviews: [UpdateTestimonialsReviewsDto!]
  Text_before: String
  id: ID
  location_id: ID
}

input UpdateLocationThumbnailDto {
  id: ID
  location_photo_id: ID
  location_thubnail_id: ID
  name: String
  url: String
}

input UpdateLocksmithDto {
  address: [String!]
  confirmed: Boolean
  description: String
  file: Upload
  file_url: String
  id: ID!
  is_verified: Boolean = false
  link_to_map: String
  link_to_site: String
  mail: String
  name: String
  owner_name: String
  owner_phone: String
  phone: String
  priority: Float
  schedules: [UpdateLocksmithScheduleDto!]
  services: [String!]
  url: String
}

input UpdateLocksmithScheduleDto {
  close_at: DateTime
  id: ID!
  name: Week
  open_at: DateTime
}

input UpdateOilChange {
  date: Int
  id: ID!
  milage: Int
  next_date: Int
  receipt_picture: Upload
  technician_id: ID
  vehicle_picture: Upload
}

input UpdateOrCreateConstructedBlockDto {
  body_text: String
  description: String
  description_secondary: String
  first_list: String
  headline: String
  id: ID
  last_list: String
  last_text: String
  list: String
  phone: String
  photo: UpdateConstructedPhotoDto
  position_block: Float
  state: String
  styles: String
  text: String
  text_left: String
  text_right: String
  type_block: String
}

input UpdatePhotoForBlockDto {
  alt: String
  blog_block_id: ID
  constructor_blog_id: ID
  id: ID
  link: String
  title: String
}

input UpdateSystemSettingsDto {
  is_parsing: Boolean!
  max_tokens: Int!
  workiz_arizona_cookie: String!
  workiz_cookie: String!
}

input UpdateTechInventoryItemDto {
  id: ID!
  qty: Int
  sku: String
}

input UpdateTechnicianDto {
  first_name: String
  id: ID!
  last_name: String
  license_plate: String
  manager_id: ID
  phone: String
  vin: String
}

input UpdateTechnicianManagerDto {
  first_name: String
  id: ID!
  last_name: String
  phone: String
}

input UpdateTemplateDto {
  id: ID!
  name: String!
}

input UpdateTestimonialsReviewsDto {
  Name: String
  Photo: String
  Review_text: String
  Type_of_service: String
  id: ID
}

input UpdateTimeTemplateDto {
  color: String
  id: ID!
  name: String
  value: String
}

input UpdateUserCustomerInfoDto {
  address: String
  id: ID!
  phone: String
}

input UpdateUserDto {
  id: ID
  location: String
  name: String
  role: UserRole = ADMIN
  workiz_id: String
}

input UpdateUserInfoDto {
  id: ID!
  key: String
  value: String
}

input UpdateUserNoteDto {
  id: ID!
  note: String
  week_end: Int
  week_start: Int
}

input UpdateUserScheduleDto {
  id: ID!
  work_from: Int
  work_to: Int
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  customer_info: UserCustomerInfo
  email: String!
  id: String!
  info: [UserInfo!]
  location: String
  logs: [Log!]!
  name: String!
  notes: [UserNote!]
  role: UserRole!
  workiz_id: String
}

type UserCustomerInfo {
  address: String
  id: ID!
  phone: String
  user_id: ID!
}

input UserCustomerInfoDto {
  address: String
  phone: String
}

type UserInfo {
  id: ID!
  key: String!
  user_id: ID!
  value: String!
}

type UserNote {
  id: ID!
  note: String!
  user_id: ID!
  week_end: Int!
  week_start: Int!
}

enum UserRole {
  ADMIN
  CUSTOMER
  DISPATCHER
  HR
  LOGISTIC
  MAIN_DISPATCHER
  MANAGER
  MARKETING
  SEO
  TECHNICIAN
}

type UserSchedule {
  id: ID!
  user_id: ID!
  work_from: Int!
  work_to: Int!
}

type UserScheduleRequest {
  id: ID!
  status: UserScheduleRequestStatus!
  user_id: ID!
  work_from: Int!
  work_to: Int!
}

enum UserScheduleRequestStatus {
  """When Main Dispatcher approved some requested schedule"""
  APPROVED

  """When Main Dispatcher declined some requested schedule"""
  DECLINED

  """When Technician / Dispatcher requested some schedule"""
  REQUESTED
}

type UserWithSchedule {
  customer_info: UserCustomerInfo
  email: String!
  id: String!
  info: [UserInfo!]
  location: String
  logs: [Log!]!
  name: String!
  notes: [UserNote!]
  role: UserRole!
  schedule_requests: [UserScheduleRequest!]!
  schedules: [UserSchedule!]!
  workiz_id: String
}

input UserWithScheduleDto {
  from: Int!
  is_available: Boolean
  locations: [String!]
  role: [UserRole!]
  search_value: String
  to: Int!
}

enum Week {
  FRIDAY
  MONDAY
  SATURDAY
  SUNDAY
  THURSDAY
  TUESDAY
  WEDNESDAY
}

type WorkizContainer {
  description: String!
  id: String!
  isLowStock: String!
  is_primary: String!
  name: String!
  total_items: String!
  total_net_value: String!
  total_unique_items: String!
  total_value: String!
}

type WorkizContainerInfo {
  cost: String!
  id: String
  item_id: String!
  item_name: String!
  long_desc: String!
  minimum_at_location: String!
  price: String!
  qty: String!
  total_items: String
  total_unique_items: String
}