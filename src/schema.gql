# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AcceptInviteDto {
  key: String!
  name: String!
  password: String!
}

input ChangePasswordDto {
  new_password: String!
  old_password: String!
}

input CreateItemTemplateDto {
  quantity: Int!
  sku: String!
  uhs_sku: String!
  workiz_id: String!
}

input CreateJobDto {
  Address: String!
  City: String!
  Email: String!
  FirstName: String!
  JobDateTime: String!
  JobNotes: String!
  JobType: String!
  LastName: String!
  Metro: String!
  Phone: String!
  PostalCode: String!
  State: String!
}

input CreateOrUpdateTechInfoDto {
  id: ID
  key: String!
  tech_id: ID!
  value: String!
}

input CreateOrUpdateTechNoteDto {
  id: ID
  note: String!
  tech_id: ID!
  week_end: Int!
  week_start: Int!
}

input CreateOrUpdateUserInfoDto {
  id: ID
  key: String!
  user_id: ID!
  value: String!
}

input CreateOrUpdateUserNoteDto {
  id: ID
  note: String!
  user_id: ID!
  week_end: Int!
  week_start: Int!
}

input CreateOrUpdateUserScheduleDto {
  id: ID
  user_id: ID!
  work_from: Int!
  work_to: Int!
}

input CreateTechDto {
  email: String!
  name: String!
  service_areas: [String!]
  skills: [String!]
  state: String
  workiz_id: String
}

input CreateTechFromWorkizDto {
  state: String
  workiz_id: String!
}

input CreateTechInfoDto {
  key: String!
  tech_id: ID!
  value: String!
}

input CreateTechNoteDto {
  note: String!
  tech_id: ID!
  week_end: Int!
  week_start: Int!
}

input CreateTechScheduleDto {
  tech_id: ID!
  work_from: Int!
  work_to: Int!
}

input CreateTimeTemplateDto {
  color: String!
  name: String!
  value: String!
}

input CreateUserInfoDto {
  key: String!
  user_id: ID!
  value: String!
}

input CreateUserNoteDto {
  note: String!
  user_id: ID!
  week_end: Int!
  week_start: Int!
}

input CreateUserScheduleDto {
  user_id: ID!
  work_from: Int!
  work_to: Int!
}

type CtmCall {
  account_id: Int!
  audio: String
  billed_amount: Int!
  billed_at: String!
  call_status: String!
  called_at: String!
  caller_number_format: String!
  city: String!
  cnam: String!
  country: String!
  day: String!
  dial_status: String!
  direction: String!
  duration: Int
  hold_time: Int!
  hour: String!
  id: String!
  month: String!
  name: String!
  notes: String!
  postal_code: String!
  ring_time: Int!
  sid: String!
  source: String!
  source_id: Int!
  source_sid: String!
  state: String!
  status: String!
  talk_time: Int!
  tgid: Int!
  tracking_label: String!
  tracking_number: String!
  tracking_number_format: String!
  unix_time: Int!
  wait_time: Int!
}

type CtmGetCallsDto {
  calls: [CtmCall!]!
  page: Int!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

input CtmGetCallsOptionDto {
  """the end date for the search (YYYY-MM-DD)"""
  end_date: String

  """
  search string to look for messages with specific callerid, caller_number, called_number, source name, etc.
  """
  filter: String

  """the page number"""
  page: Int!

  """the number of items per page, defaults to 10"""
  per_page: Int

  """the start date for the search (YYYY-MM-DD)"""
  start_date: String
}

type FindContainerAndTemplate {
  container: [WorkizContainerInfo!]!
  template: [ItemTemplate!]!
}

input FindPaginationDto {
  skip: Int!
  take: Int!
}

type FineTune {
  created_at: Int!
  id: ID!
  model: String!
  openai_file_id: String!
  openai_id: String!
}

type FineTuneItem {
  deleted: Boolean!
  id: ID!
  prompt: String!
  text: String!
}

type GoogleSheetsTechSchedule {
  active_state: String!
  friday: String
  monday: String
  name: String!
  note: String
  saturday: String
  sunday: String
  thursday: String
  tuesday: String
  wednesday: String
  week_end: String
  week_start: String
}

input InviteUserDto {
  email: String
  location: String
  name: String
  role: UserRole = ADMIN
  workiz_id: String
}

type InvitedUser {
  email: String!
  id: ID!
  key: String!
  location: String
  name: String!
  role: UserRole!
  workiz_id: String
}

type ItemCompareResult {
  actual_quantity: Int!
  difference: Int!
  name: String!
  sku: String!
  template_quantity: Int!
  uhs_sku: String!
}

type ItemTemplate {
  id: ID!
  quantity: Int!
  sku: String!
  uhs_sku: String!
  workiz_id: String!
}

type JobDto {
  Address: String!
  City: String!
  ClientId: Float!
  Comments: String!
  Company: String!
  Country: String!
  CreatedBy: String!
  CreatedDate: String
  Email: String!
  FirstName: String!
  JobAmountDue: String
  JobDateTime: String
  JobEndDateTime: String
  JobNotes: String
  JobSource: String!
  JobTotalPrice: String
  JobType: String
  LastName: String!
  LastStatusUpdate: String
  Latitude: String!
  Longitude: String!
  PaymentDueDate: String
  Phone: String!
  PhoneExt: String!
  PostalCode: String!
  SecondPhone: String!
  SecondPhoneExt: String!
  SerialId: Float!
  State: String!
  Status: String!
  SubStatus: String!
  SubTotal: String
  UUID: String!
  Unit: String!
}

type Log {
  action: String!
  created_at: Int!
  group: LogGroup!
  id: ID!
  message: String
  type: LogType!
  user_id: ID
}

enum LogGroup {
  DEVELOPER
  USER
}

enum LogType {
  ERROR
  SUCCESS
  WARNING
}

type LogWithUser {
  action: String!
  created_at: Int!
  group: LogGroup!
  id: ID!
  message: String
  type: LogType!
  user: User
  user_id: ID
}

input LoginCredential {
  email: String!
  password: String!
}

type LogsPaginated {
  items: [LogWithUser!]!
  total: Int!
}

type Message {
  created: Int!
  finish_reason: String!
  id: ID!
  openai_id: String!
  prompt: String!
  text: String!
  total_tokens: Int!
}

type Mutation {
  acceptInvite(accept_invite_dto: AcceptInviteDto!): User!
  assignTechToJobWorkiz(id: String!, userName: String!): SendDto!
  changePassword(passwords: ChangePasswordDto!): SendDto!
  createFineTuneItem(prompt: String!, text: String!): FineTuneItem!
  createItemTemplate(createItemTemplateDto: CreateItemTemplateDto!): ItemTemplate!
  createManyTechsFromWorkiz(techs: [CreateTechFromWorkizDto!]!): [Tech!]!
  createManyTechsSchedules(techs_schedules: [CreateTechScheduleDto!]!): [TechSchedule!]!
  createManyUsersSchedules(users_schedules: [CreateUserScheduleDto!]!): [UserSchedule!]!
  createNewJobWorkiz(createJobDto: CreateJobDto!): SendDto!
  createOrUpdateManyUsersSchedules(user_schedules: [CreateOrUpdateUserScheduleDto!]!): [UserSchedule!]!
  createOrUpdateTechInfo(tech_infos: [CreateOrUpdateTechInfoDto!]!): [TechInfo!]!
  createOrUpdateTechNote(tech_note: CreateOrUpdateTechNoteDto!): TechNote!
  createOrUpdateUserInfo(user_infos: [CreateOrUpdateUserInfoDto!]!): [UserInfo!]!
  createOrUpdateUserNote(user_note: CreateOrUpdateUserNoteDto!): UserNote!
  createSystemSettings(max_tokens: Int!): SystemSettings!
  createTech(tech: CreateTechDto!): Tech!
  createTechFromWorkiz(state: String, workiz_id: String!): Tech!
  createTechInfo(tech_info: CreateTechInfoDto!): TechInfo!
  createTechNote(tech_note: CreateTechNoteDto!): TechNote!
  createTechSchedule(tech_schedule: CreateTechScheduleDto!): TechSchedule!
  createTimeTemplate(time_template: CreateTimeTemplateDto!): TimeTemplate!
  createUserInfo(user_info: CreateUserInfoDto!): UserInfo!
  createUserNote(user_note: CreateUserNoteDto!): UserNote!
  createUserSchedule(user_schedule: CreateUserScheduleDto!): UserSchedule!
  deleteFineTuneItem(id: ID!): ID!
  deleteItemTemplate(id: ID!): ID!
  deleteManyInvitedUsers(user_ids: [ID!]!): [String!]!
  deleteManyTechsByIds(ids: [ID!]!): [ID!]!
  deleteManyUserSchedules(ids: [ID!]!): [ID!]!
  deleteManyUsers(user_ids: [ID!]!): [String!]!
  deleteTechById(id: ID!): ID!
  deleteTechInfo(id: ID!): ID!
  deleteTechNote(id: ID!): ID!
  deleteTechSchedule(id: ID!): ID!
  deleteTimeTemplate(id: ID!): ID!
  deleteUserInfo(id: ID!): ID!
  deleteUserNote(id: ID!): ID!
  deleteUserSchedule(id: ID!): ID!
  inviteUserToApp(inviteUserDto: InviteUserDto!): InvitedUser!
  login(login_dto: LoginCredential!): TokenResponse!
  logout(refresh_token: String!): SendDto!
  prepareFileForFineTune(filename: String!): String!
  sendMessage(prompt: String!): Message!
  sendMessageToOpenAi(message: String!): String!
  speechToText(call_id: String!): Transcription!
  startFineTune: FineTune!
  updateCurrentUser(user: UpdateCurrentUserDto!): User!
  updateFineTuneItem(fine_tune_item: UpdateFineTuneItemDto!): FineTuneItem!
  updateItemTemplate(updateItemTemplateDto: UpdateItemTemplateDto!): ItemTemplate!
  updateManyTechsSchedules(techs_schedules: [UpdateTechScheduleDto!]!): [TechSchedule!]!
  updateManyUsersSchedules(users_schedules: [UpdateUserScheduleDto!]!): [UserSchedule!]!
  updateSystemSettings(system_settings: UpdateSystemSettingsDto!): SystemSettings!
  updateTech(tech: UpdateTechDto!): Tech!
  updateTechInfo(tech_info: UpdateTechInfoDto!): TechInfo!
  updateTechNote(tech_note: UpdateTechNoteDto!): TechNote!
  updateTechSchedule(tech_schedule: UpdateTechScheduleDto!): TechSchedule!
  updateTimeTemplate(time_template: UpdateTimeTemplateDto!): TimeTemplate!
  updateUserInfo(user_info: UpdateUserInfoDto!): UserInfo!
  updateUserNote(user_note: UpdateUserNoteDto!): UserNote!
  updateUserSchedule(user_schedule: UpdateUserScheduleDto!): UserSchedule!
}

type OpenAiFile {
  bytes: Int!
  created_at: Int!
  filename: String!
  id: String!
  object: String!
  purpose: String!
  status: String!
}

type OpenAiFineTune {
  created_at: Int!
  events: [OpenAiFineTuneEvent!]!
  fine_tuned_model: String
  id: String!
  model: String!
  status: String!
  updated_at: Int!
}

type OpenAiFineTuneEvent {
  created_at: Int!
  level: String!
  message: String!
}

type PaginatedJobDto {
  has_more: Boolean!
  items: [JobDto!]!
}

type Query {
  findTranscription(call_id: String!): Transcription!
  generateDifferenceReport(only_less: Boolean! = true, workiz_id: String!): [ItemCompareResult!]!
  getAllContainers: [WorkizContainer!]!
  getAllFiles: [OpenAiFile!]!
  getAllInvitedUsers: [InvitedUser!]!
  getAllJobsWorkiz(
    offset: Int!

    """Max 100"""
    records: Int!
  ): PaginatedJobDto!
  getAllMessages: [Message!]!
  getAllTechs: [Tech!]!
  getAllTechsWorkiz: [TechnicianWorkiz!]!
  getAllTimeTemplates: [TimeTemplate!]!
  getAllUsers: [User!]!
  getAllUsersWorkiz: [TechnicianWorkiz!]!
  getAllWorkizLeads: [JobDto!]!
  getCalls(ctmGetCallsOptionDto: CtmGetCallsOptionDto!): CtmGetCallsDto!
  getContainerById(id: String!): FindContainerAndTemplate!
  getCurrentUser: User!
  getFineTuneList: [FineTuneItem!]!
  getFullLastFineTune: OpenAiFineTune!
  getLogs(pagination: FindPaginationDto!): LogsPaginated!
  getSheet(col: String!, row: String!, sheet_id: String!, tab_name: String!): [[String!]!]!
  getSystemSettings: SystemSettings!
  getTechsSchedule: [GoogleSheetsTechSchedule!]!
  getTechsWithSchedule(from: Int!, is_available: Boolean, search_value: String, states: [String!], to: Int!): [TechWithSchedule!]!
  getTechsWorkizWithoutAdded: [TechnicianWorkiz!]!
  getUniqueLocations: [String!]
  getUsersWithSchedule(from: Int!, is_available: Boolean, locations: [String!], role: [UserRole!], search_value: String, to: Int!): [UserWithSchedule!]!
  getWorkizJobById(id: String!): JobDto!
  getWorkizLeadById(id: String!): JobDto!
  listFineTunes: String!
  listModels: String!
  testApi(method: String!, url: String!): String!
}

type SendDto {
  message: String
  status: Float
}

type SystemSettings {
  active_model: String!
  id: ID!
  max_tokens: Int!
  workiz_cookie: String!
}

type Tech {
  email: String!
  id: ID!
  info: [TechInfo!]!
  name: String!
  notes: [TechNote!]!
  service_areas: [String!]
  skills: [String!]
  state: String
  workiz_id: String
}

type TechInfo {
  id: ID!
  key: String!
  tech_id: ID!
  value: String!
}

type TechNote {
  id: ID!
  note: String!
  tech_id: ID!
  week_end: Int!
  week_start: Int!
}

type TechSchedule {
  id: ID!
  tech_id: ID!
  work_from: Int!
  work_to: Int!
}

type TechWithSchedule {
  email: String!
  id: ID!
  info: [TechInfo!]!
  name: String!
  notes: [TechNote!]!
  schedules: [TechSchedule!]!
  service_areas: [String!]
  skills: [String!]
  state: String
  workiz_id: String
}

type TechnicianWorkiz {
  active: Boolean!
  created: String!
  email: String!
  fieldTech: Boolean!
  id: String!
  name: String!
  role: String!
  serviceAreas: [String!]!
  skills: [String!]!
}

type TimeTemplate {
  color: String!
  id: ID!
  name: String!
  value: String!
}

type TokenResponse {
  access_token: String!
  refresh_token: String!
}

type Transcription {
  ctm_call_id: String!
  id: ID!
  text: String!
}

input UpdateCurrentUserDto {
  location: String
  name: String
  workiz_id: String
}

input UpdateFineTuneItemDto {
  id: ID!
  prompt: String
  text: String
}

input UpdateItemTemplateDto {
  id: ID!
  quantity: Int!
  sku: String!
  uhs_sku: String!
}

input UpdateSystemSettingsDto {
  max_tokens: Int!
  workiz_cookie: String!
}

input UpdateTechDto {
  email: String
  id: ID!
  name: String
  service_areas: [String!]
  skills: [String!]
  state: String
  workiz_id: String
}

input UpdateTechInfoDto {
  id: ID!
  key: String
  value: String
}

input UpdateTechNoteDto {
  id: ID!
  note: String
  week_end: Int
  week_start: Int
}

input UpdateTechScheduleDto {
  id: ID!
  work_from: Int
  work_to: Int
}

input UpdateTimeTemplateDto {
  color: String
  id: ID!
  name: String
  value: String
}

input UpdateUserInfoDto {
  id: ID!
  key: String
  value: String
}

input UpdateUserNoteDto {
  id: ID!
  note: String
  week_end: Int
  week_start: Int
}

input UpdateUserScheduleDto {
  id: ID!
  work_from: Int
  work_to: Int
}

type User {
  email: String!
  id: String!
  info: [UserInfo!]
  location: String
  logs: [Log!]!
  name: String!
  notes: [UserNote!]
  role: UserRole!
  workiz_id: String
}

type UserInfo {
  id: ID!
  key: String!
  user_id: ID!
  value: String!
}

type UserNote {
  id: ID!
  note: String!
  user_id: ID!
  week_end: Int!
  week_start: Int!
}

enum UserRole {
  ADMIN
  DISPATCHER
  MAIN_DISPATCHER
  TECHNICIAN
}

type UserSchedule {
  id: ID!
  user_id: ID!
  work_from: Int!
  work_to: Int!
}

type UserWithSchedule {
  email: String!
  id: String!
  info: [UserInfo!]
  location: String
  logs: [Log!]!
  name: String!
  notes: [UserNote!]
  role: UserRole!
  schedules: [UserSchedule!]!
  workiz_id: String
}

type WorkizContainer {
  description: String!
  id: String!
  isLowStock: String!
  is_primary: String!
  name: String!
  total_items: String!
  total_net_value: String!
  total_unique_items: String!
  total_value: String!
}

type WorkizContainerInfo {
  cost: String!
  id: String
  item_id: String!
  item_name: String!
  long_desc: String!
  minimum_at_location: String!
  price: String!
  qty: String!
  total_items: String
  total_unique_items: String
}